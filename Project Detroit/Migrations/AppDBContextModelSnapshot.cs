// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Project.Detroit.Models;

#nullable disable

namespace Project.Detroit.Migrations
{
    [DbContext(typeof(AppDBContext))]
    partial class AppDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Notificationshared", b =>
                {
                    b.Property<Guid>("SharedItemsSharedId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("sharedNotificationsId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("SharedItemsSharedId", "sharedNotificationsId");

                    b.HasIndex("sharedNotificationsId");

                    b.ToTable("Notificationshared", (string)null);
                });

            modelBuilder.Entity("Paymentshared", b =>
                {
                    b.Property<Guid>("SharedItemsSharedId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("sharedPaymentsId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("SharedItemsSharedId", "sharedPaymentsId");

                    b.HasIndex("sharedPaymentsId");

                    b.ToTable("Paymentshared", (string)null);
                });

            modelBuilder.Entity("Project.Detroit.Models.Expense", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal?>("ExpenseAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ExpenseName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("GroupID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("UserAccountID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("GroupID");

                    b.HasIndex("UserAccountID");

                    b.ToTable("Expense", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("f5b20655-6d62-4fda-ac1d-740f2c629b2d"),
                            ExpenseAmount = 13000m,
                            ExpenseName = "Local Server Crashed",
                            GroupID = new Guid("de6d05ee-aafe-4997-b7cf-3c946b66b676")
                        },
                        new
                        {
                            Id = new Guid("9bcf85a4-0765-42ab-9744-df162d6e6ef8"),
                            ExpenseAmount = 100m,
                            ExpenseName = "Install Windows 11",
                            UserAccountID = new Guid("87cd9c66-bb1e-48be-a16f-d6faf0f6e434")
                        });
                });

            modelBuilder.Entity("Project.Detroit.Models.Group", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("GroupName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("groupBalance")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("groupExpense")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("Groups", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("de6d05ee-aafe-4997-b7cf-3c946b66b676"),
                            GroupName = "Group Turing",
                            groupBalance = 100000000m,
                            groupExpense = 350000m
                        });
                });

            modelBuilder.Entity("Project.Detroit.Models.Notification", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Details")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("GroupID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("NotificationName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("UserAccountID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("GroupID");

                    b.HasIndex("UserAccountID");

                    b.ToTable("Notification", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("1918abb6-d56b-4278-a776-36448ac598da"),
                            Details = "The expense posted here is irrelevant with the purpose of this website.",
                            GroupID = new Guid("de6d05ee-aafe-4997-b7cf-3c946b66b676"),
                            NotificationName = "Irrelevant Content"
                        },
                        new
                        {
                            Id = new Guid("e353e4c8-05b8-403b-b517-41d5d986c165"),
                            Details = "Your balance is low. Please update your balance and add your expense.",
                            NotificationName = "Low Balance",
                            UserAccountID = new Guid("87cd9c66-bb1e-48be-a16f-d6faf0f6e434")
                        });
                });

            modelBuilder.Entity("Project.Detroit.Models.Payment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("GroupID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal?>("PaymentAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("PaymentName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("UserAccountID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("GroupID");

                    b.HasIndex("UserAccountID");

                    b.ToTable("Payment", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("d23e58f9-b227-44b5-a6c5-4cd43c51ffbd"),
                            GroupID = new Guid("de6d05ee-aafe-4997-b7cf-3c946b66b676"),
                            PaymentAmount = 3000m,
                            PaymentName = "Two Night Stay at London Sheraton"
                        },
                        new
                        {
                            Id = new Guid("a3ff2285-b66e-4719-b241-3b003cd4e730"),
                            PaymentAmount = 130m,
                            PaymentName = "UK Tourist Visa",
                            UserAccountID = new Guid("87cd9c66-bb1e-48be-a16f-d6faf0f6e434")
                        });
                });

            modelBuilder.Entity("Project.Detroit.Models.Report", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Details")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("GroupID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ReportName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("UserAccountID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("GroupID");

                    b.HasIndex("UserAccountID");

                    b.ToTable("Report", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("6a716f33-3481-4917-a5db-9c30cf0a8f90"),
                            Details = "This report analyzes the expenses for the previous quarter. It covers various categories, including travel, office supplies, and utilities. +The report provides a breakdown of the total amount spent in each category and identifies any notable trends or patterns. +Additionally, it highlights areas where cost-saving measures can be implemented. +The report aims to provide insights for better expense management and decision-making.",
                            GroupID = new Guid("de6d05ee-aafe-4997-b7cf-3c946b66b676"),
                            ReportName = "Expense Analysis Report"
                        },
                        new
                        {
                            Id = new Guid("9d068e6b-4095-4a2b-8787-b617ec74846c"),
                            Details = "This report provides a detailed breakdown of your monthly expenses. +It includes categories such as rent, groceries, transportation, and entertainment. +The report showcases your spending patterns and highlights areas where you can potentially save money. +Use this report to track your expenses, set budgets, and make informed financial decisions.",
                            ReportName = "Monthly Expense Report",
                            UserAccountID = new Guid("87cd9c66-bb1e-48be-a16f-d6faf0f6e434")
                        });
                });

            modelBuilder.Entity("Project.Detroit.Models.shared", b =>
                {
                    b.Property<Guid>("SharedId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ExpenseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("GID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal?>("sharedBalance")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("sharedExpense")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("SharedId");

                    b.HasIndex("ExpenseId");

                    b.HasIndex("GID");

                    b.HasIndex("UserId");

                    b.ToTable("Shared", (string)null);

                    b.HasData(
                        new
                        {
                            SharedId = new Guid("694fe8c3-188a-4757-9ef2-f02c265e1bbf"),
                            GID = new Guid("de6d05ee-aafe-4997-b7cf-3c946b66b676"),
                            UserId = new Guid("87cd9c66-bb1e-48be-a16f-d6faf0f6e434"),
                            sharedBalance = 100822450.50m,
                            sharedExpense = 750000m
                        },
                        new
                        {
                            SharedId = new Guid("38648722-df51-4a07-94c6-11b52626cbe3"),
                            GID = new Guid("de6d05ee-aafe-4997-b7cf-3c946b66b676"),
                            UserId = new Guid("4df465f1-279f-4d55-a62f-23df9a04b792"),
                            sharedBalance = 101022450.50m,
                            sharedExpense = 1250000m
                        });
                });

            modelBuilder.Entity("Project.Detroit.Models.userAccount", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("GroupID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("individualBalance")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("individualExpense")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("GroupID");

                    b.ToTable("UserAccounts", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("87cd9c66-bb1e-48be-a16f-d6faf0f6e434"),
                            Email = "dacikbas@umich.edu",
                            GroupID = new Guid("de6d05ee-aafe-4997-b7cf-3c946b66b676"),
                            Name = "Deniz",
                            Password = "Karya99DA",
                            Surname = "Acikbas",
                            individualBalance = 822450.50m,
                            individualExpense = 400000m
                        },
                        new
                        {
                            Id = new Guid("4df465f1-279f-4d55-a62f-23df9a04b792"),
                            Email = "parikhpc@umich.edu",
                            GroupID = new Guid("de6d05ee-aafe-4997-b7cf-3c946b66b676"),
                            Name = "Parashar",
                            Password = "Par1234",
                            Surname = "Parikh",
                            individualBalance = 1022450.50m,
                            individualExpense = 900000m
                        });
                });

            modelBuilder.Entity("Reportshared", b =>
                {
                    b.Property<Guid>("SharedItemsSharedId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("sharedReportsId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("SharedItemsSharedId", "sharedReportsId");

                    b.HasIndex("sharedReportsId");

                    b.ToTable("Reportshared", (string)null);
                });

            modelBuilder.Entity("Notificationshared", b =>
                {
                    b.HasOne("Project.Detroit.Models.shared", null)
                        .WithMany()
                        .HasForeignKey("SharedItemsSharedId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Project.Detroit.Models.Notification", null)
                        .WithMany()
                        .HasForeignKey("sharedNotificationsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Paymentshared", b =>
                {
                    b.HasOne("Project.Detroit.Models.shared", null)
                        .WithMany()
                        .HasForeignKey("SharedItemsSharedId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Project.Detroit.Models.Payment", null)
                        .WithMany()
                        .HasForeignKey("sharedPaymentsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Project.Detroit.Models.Expense", b =>
                {
                    b.HasOne("Project.Detroit.Models.Group", "Group")
                        .WithMany("groupApprovedExpenses")
                        .HasForeignKey("GroupID");

                    b.HasOne("Project.Detroit.Models.userAccount", "userAccount")
                        .WithMany("userApprovedExpenses")
                        .HasForeignKey("UserAccountID");

                    b.Navigation("Group");

                    b.Navigation("userAccount");
                });

            modelBuilder.Entity("Project.Detroit.Models.Notification", b =>
                {
                    b.HasOne("Project.Detroit.Models.Group", "Group")
                        .WithMany("groupNotifications")
                        .HasForeignKey("GroupID");

                    b.HasOne("Project.Detroit.Models.userAccount", "userAccount")
                        .WithMany("userNotifications")
                        .HasForeignKey("UserAccountID");

                    b.Navigation("Group");

                    b.Navigation("userAccount");
                });

            modelBuilder.Entity("Project.Detroit.Models.Payment", b =>
                {
                    b.HasOne("Project.Detroit.Models.Group", "Group")
                        .WithMany("groupPayments")
                        .HasForeignKey("GroupID");

                    b.HasOne("Project.Detroit.Models.userAccount", "userAccount")
                        .WithMany("individualPayments")
                        .HasForeignKey("UserAccountID");

                    b.Navigation("Group");

                    b.Navigation("userAccount");
                });

            modelBuilder.Entity("Project.Detroit.Models.Report", b =>
                {
                    b.HasOne("Project.Detroit.Models.Group", "Group")
                        .WithMany("groupReports")
                        .HasForeignKey("GroupID");

                    b.HasOne("Project.Detroit.Models.userAccount", "userAccount")
                        .WithMany("userReports")
                        .HasForeignKey("UserAccountID");

                    b.Navigation("Group");

                    b.Navigation("userAccount");
                });

            modelBuilder.Entity("Project.Detroit.Models.shared", b =>
                {
                    b.HasOne("Project.Detroit.Models.Expense", null)
                        .WithMany("SharedItems")
                        .HasForeignKey("ExpenseId");

                    b.HasOne("Project.Detroit.Models.Group", "group")
                        .WithMany("SharedItems")
                        .HasForeignKey("GID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Project.Detroit.Models.userAccount", "user")
                        .WithMany("SharedItems")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("group");

                    b.Navigation("user");
                });

            modelBuilder.Entity("Project.Detroit.Models.userAccount", b =>
                {
                    b.HasOne("Project.Detroit.Models.Group", "Group")
                        .WithMany("Members")
                        .HasForeignKey("GroupID");

                    b.Navigation("Group");
                });

            modelBuilder.Entity("Reportshared", b =>
                {
                    b.HasOne("Project.Detroit.Models.shared", null)
                        .WithMany()
                        .HasForeignKey("SharedItemsSharedId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Project.Detroit.Models.Report", null)
                        .WithMany()
                        .HasForeignKey("sharedReportsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Project.Detroit.Models.Expense", b =>
                {
                    b.Navigation("SharedItems");
                });

            modelBuilder.Entity("Project.Detroit.Models.Group", b =>
                {
                    b.Navigation("Members");

                    b.Navigation("SharedItems");

                    b.Navigation("groupApprovedExpenses");

                    b.Navigation("groupNotifications");

                    b.Navigation("groupPayments");

                    b.Navigation("groupReports");
                });

            modelBuilder.Entity("Project.Detroit.Models.userAccount", b =>
                {
                    b.Navigation("SharedItems");

                    b.Navigation("individualPayments");

                    b.Navigation("userApprovedExpenses");

                    b.Navigation("userNotifications");

                    b.Navigation("userReports");
                });
#pragma warning restore 612, 618
        }
    }
}
