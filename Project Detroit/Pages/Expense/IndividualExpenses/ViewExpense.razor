@page "/Expenses/ViewExpense/Individual/{Id:guid}"
@using Project.Detroit.Models
@using Project.Detroit.Services
@inject ExpenseService _ExpenseService
@inject UserAccountService _userAccountService
@inject NavigationManager _navigationManager
@inject ISnackbar Snackbar

<PageTitle>Project Detroit: View Expense</PageTitle>

<MudPaper Class="pa-8 ma-5 mt-2" Elevation="3">
    <MudText Class="mb-2"><h1><strong>@_expense.ExpenseName</strong></h1></MudText>
    <MudCard Elevation="2" Class="mt-4 pa-4">
        <MudText><MudIcon Icon="@Icons.Material.Filled.Money" Size="Size.Small" /> Has an amount of $@_expense.ExpenseAmount</MudText>
    </MudCard>
    <MudButton Class="mt-4 mr-4" OnClick="DeleteExpense" Variant="Variant.Filled" StartIcon="@Icons.Material.Filled.Delete" Color="Color.Error">DELETE EXPENSE</MudButton>
    </MudPaper>

@code {
    [Parameter] public Guid Id { get; set; }

    userAccount? currentUser = new userAccount();

    Expense _expense = new Expense();

    protected override async Task OnInitializedAsync()
    {
        _expense = await Task.Run(() => _ExpenseService.GetExpenseById(Id));
        currentUser = await Task.Run(() => _userAccountService.getUserByIdAsync(_expense.UserAccountID.Value));
    }

    //Redirect to delete expense
    protected async void DeleteExpense()
    {
        _navigationManager.NavigateTo($"/Expenses/DeleteExpense/Individual/{_expense.Id}");
    }
}
