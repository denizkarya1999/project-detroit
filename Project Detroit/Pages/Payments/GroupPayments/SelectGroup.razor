@page "/Payments/groupPayments/selectGroup"
@using Project.Detroit.Models
@using Project.Detroit.Services
@inject GroupService groupService
@inject NavigationManager navigationManager
@inject ISnackbar Snackbar

<PageTitle>Project Detroit: Select Group for Payments</PageTitle>

<MudPaper Class="pa-8 ma-5 mt-2" Elevation="3">
    <MudText Class="mb-2"><h1><strong>Select Group</strong></h1></MudText>
    <MudText Class="mb-2">Which group do you want to view it`s payments?</MudText>
    <MudCard Elevation="2" Class="mt-4 mb-4 pa-4">
        <select class="form-control" @bind="selectedGroupId">
            @if (groups == null)
            {
                <MudProgressLinear Color="Color.Error" Indeterminate="true" Class="my-7" />
            }
            else
            {
                <option value="">-- Select Group --</option>
                @foreach (var group in groups)
                {
                    <option value="@group.Id">@group.GroupName</option>
                }
            }
        </select>
    </MudCard>
    <MudButton Color="Color.Success" StartIcon="@Icons.Material.Filled.Group" Variant="Variant.Filled" @onclick="ChooseGroup">SELECT GROUP</MudButton>
    </MudPaper>

@code {
    //Section for group-related variables
    List<Group> groups;
    Guid? selectedGroupId;

    protected override async Task OnInitializedAsync()
    {
        groups = await groupService.getAllGroupsAsync();
    }

    private async Task ChooseGroup()
    {
        try
        {
            navigationManager.NavigateTo($"/Payments/groupPayments/{selectedGroupId.Value}");
        }
        catch (Exception ex)
        {
            Snackbar.Add($"Please select a group to proceed.", Severity.Error);
        }
    }
}
